// <auto-generated />
using System;
using DbFirstVsCodeFirst.CodeFirst.Domain.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbFirstVsCodeFirst.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    [Migration("20241013233128_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdBand")
                        .HasColumnType("int")
                        .HasColumnName("ID_BAND");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex("IdBand");

                    b.ToTable("ALBUM", (string)null);
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BIRTH_DATE");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LAST_NAME");

                    b.HasKey("Id");

                    b.ToTable("ARTIST", (string)null);
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Artistsband", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdArtist")
                        .HasColumnType("int")
                        .HasColumnName("ID_ARTIST");

                    b.Property<int>("IdBand")
                        .HasColumnType("int")
                        .HasColumnName("ID_BAND");

                    b.HasKey("Id");

                    b.HasIndex("IdArtist");

                    b.HasIndex("IdBand");

                    b.ToTable("ARTISTSBAND", (string)null);
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Band", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdGenre")
                        .HasColumnType("int")
                        .HasColumnName("ID_GENRE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex("IdGenre");

                    b.ToTable("BAND", (string)null);
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("GENRE", (string)null);
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdAlbum")
                        .HasColumnType("int")
                        .HasColumnName("ID_ALBUM");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex("IdAlbum");

                    b.ToTable("SONG", (string)null);
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Album", b =>
                {
                    b.HasOne("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Band", "Band")
                        .WithMany("Albums")
                        .HasForeignKey("IdBand")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Band");
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Artistsband", b =>
                {
                    b.HasOne("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Artist", "Artists")
                        .WithMany("Artistsbands")
                        .HasForeignKey("IdArtist")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Band", "Band")
                        .WithMany("Artistsbands")
                        .HasForeignKey("IdBand")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artists");

                    b.Navigation("Band");
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Band", b =>
                {
                    b.HasOne("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Genre", "Genre")
                        .WithMany("Bands")
                        .HasForeignKey("IdGenre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Song", b =>
                {
                    b.HasOne("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("IdAlbum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Artist", b =>
                {
                    b.Navigation("Artistsbands");
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Band", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Artistsbands");
                });

            modelBuilder.Entity("DbFirstVsCodeFirst.CodeFirst.Domain.Models.Genre", b =>
                {
                    b.Navigation("Bands");
                });
#pragma warning restore 612, 618
        }
    }
}
